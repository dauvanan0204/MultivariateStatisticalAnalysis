#hồi quy tuyến tính đơn: y = ax + b
##đưa ra các ước lượng của các hệ số a và b
##bài toán kiểm định hệ số: H0: a = 0 / H0: b = 0
##phần dư: e = y - y_h: kiểm định xem e có tuân theo pp chuẩn với giá trị trung bình bằng 0 không?
install.packages("MASS") #cài đặt thư viện chứa data set Boston
library(MASS) #gọi thư viện
names((Boston)) #đưa ra tên các biến
lm.fit = lm(medv ~ lstat, data = Boston) #HQTT: medv = a + b * lstat (C1)
lm(Boston$medv ~ Boston$lstat) #(C2)
attach(Boston) #C3: tách dữ liệu
lm(medv ~ lstat)
#PT đường thẳng HQTT: medv = 34.55 - 0.95 * lstat
summary(lm.fit) #tóm tắt kết quả
##Biểu diễn tuyến tính của biến medv theo lstat trong bộ dữ liệu Boston
##Phần dư: e = y - y_h: Min, 1Q, Median, 3Q, Max
lm.fit$residuals #phần dư e = y - y_h, y là medv thực trong bộ dl, y_h là medv được dự đoán theo mô hình
length(lm.fit$residuals)
###bài toán KĐ: phần dư có tuân theo pp chuẩn với GTTB bằng 0 không?
names(lm.fit)
shapiro.test(lm.fit$residuals) #kiểm tra pp chuẩn của phần dư
## Bt: H0: lm.fit$residuals tân theo pp chuẩn với H1: lm.fit$residuals k tuân theo pp chuẩn
### p_value < 2.2 * 10^(-16) nên bác bỏ H0. Vậy phần dư k tuân theo pp chuẩn

t.test(lm.fit$residuals, mu = 0) #kĐ về GTTB nếu chuẩn
wilcox.test(lm.fit$residuals) #nếu không chuẩn
?lm
#Hệ số: ước lượng, sai số chuẩn, test thống kê T (t value), p-value (Pr(>|t|))
#xây dựng mô hình: medv = a + b * lstat
##a_h = 34.55, b_h = -0.95
##Bt kiểm định hệ số a: H0: a = 0 với H1: a != 0
### Do p-value < 2.10^(-16) < 0.05 nên bác bỏ H0. Với myn 5%, có cơ sở để nói a != 0


###H0: EX = 0 với H1: EX != 0
lm.fit = lm(medv ~ lstat)
confint(lm.fit) #KTC 95% cho các hệ số trong mô hình hồi quy
confint(lm.fit, level = 0.99)

predicted_value <- predict(lm.fit, data.frame(lstat = (c(5,10,15))), interval = "confidence") $ đưa ra gtri dự đoán của medv khi biết lstat
print(predicted_value)
 #34.5538409 - 0.9500494 * 5
?predict
dev.off()
plot(lstat, medv)
abline(lm.fit)
lm.fit$coefficients
abline(lm.fit, lwd = 3)
abline(lm.fit, lwd = 3, col = "red")
plot(lstat, medv, col = "red")
plot(lstat, medv, pch = 20)
plot(lstat, medv, pch = ".")
plot(1:20, 1: 20, pch = 1:20)

par(mfrow = c(2,2)) #chia khung vẽ đồ thị thành 2 hàng, 2 cột
plot(lm.fit)
dev.off()
plot(predict(lm.fit), residuals(lm.fit))
plot(predict(lm.fit), rstudent(lm.fit))
